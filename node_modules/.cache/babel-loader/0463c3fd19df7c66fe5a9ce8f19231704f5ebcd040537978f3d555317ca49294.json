{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  data() {\n    return {\n      showError: false,\n      movie: {},\n      pageTitle: \"Add New Movie\",\n      isUpdate: false,\n      showMsg: ''\n    };\n  },\n  methods: {\n    createMovie() {\n      apiService.addNewMovie(this.movie).then(response => {\n        if (response.status === 201) {\n          this.movie = response.data;\n          this.showMsg = \"\";\n          router.push('/movie-list/new');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          this.showMsg = \"error\";\n        }\n      });\n    },\n    cancelOperation() {\n      router.push(\"/movie-list\");\n    },\n    updateMovie() {\n      apiService.updateMovie(this.movie).then(response => {\n        if (response.status === 200) {\n          this.movie = response.data;\n          router.push('/movie-list/update');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          this.showMsg = \"error\";\n        }\n      });\n    }\n  },\n  mounted() {\n    if (this.$route.params.pk) {\n      this.pageTitle = \"Edit Movie\";\n      this.isUpdate = true;\n      apiService.getMovie(this.$route.params.pk).then(response => {\n        this.movie = response.data;\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA0DE,OAAOA,MAAK,MAAO,WAAW;AAC9B,SAAQC,UAAU,QAAO,oBAAoB;AAC7C,MAAMC,UAAS,GAAI,IAAID,UAAU,EAAE;AACnC,eAAe;EACbE,IAAI,GAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,CAAC,CAAC;MACTC,SAAS,EAAE,eAAe;MAC1BC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAW,GAAG;MACZR,UAAU,CAACS,WAAW,CAAC,IAAI,CAACN,KAAK,CAAC,CAACO,IAAI,CAACC,QAAO,IAAK;QAClD,IAAIA,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACT,KAAI,GAAIQ,QAAQ,CAACV,IAAI;UAC1B,IAAI,CAACK,OAAM,GAAI,EAAE;UACjBR,MAAM,CAACe,IAAI,CAAC,iBAAiB,CAAC;QAChC,CAAC,MAAI;UACH,IAAI,CAACP,OAAM,GAAI,OAAO;QACxB;MACF,CAAC,CAAC,CAACQ,KAAK,CAACC,KAAI,IAAK;QAChB,IAAIA,KAAK,CAACJ,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACjCd,MAAM,CAACe,IAAI,CAAC,OAAO,CAAC;QACtB,OAAO,IAAIE,KAAK,CAACJ,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACxC,IAAI,CAACN,OAAM,GAAI,OAAO;QACxB;MACF,CAAC,CAAC;IACJ,CAAC;IACDU,eAAe,GAAE;MACflB,MAAM,CAACe,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACDI,WAAW,GAAG;MACZjB,UAAU,CAACiB,WAAW,CAAC,IAAI,CAACd,KAAK,CAAC,CAACO,IAAI,CAACC,QAAO,IAAK;QAClD,IAAIA,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACT,KAAI,GAAIQ,QAAQ,CAACV,IAAI;UAC1BH,MAAM,CAACe,IAAI,CAAC,oBAAoB,CAAC;QACnC,OAAO;UACL,IAAI,CAACP,OAAM,GAAI,OAAO;QACxB;MACF,CAAC,CAAC,CAACQ,KAAK,CAACC,KAAI,IAAK;QAChB,IAAIA,KAAK,CAACJ,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACjCd,MAAM,CAACe,IAAI,CAAC,OAAO,CAAC;QACtB,OAAO,IAAIE,KAAK,CAACJ,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACxC,IAAI,CAACN,OAAM,GAAI,OAAO;QACxB;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EACDY,OAAO,GAAG;IACR,IAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE;MACzB,IAAI,CAACjB,SAAQ,GAAI,YAAY;MAC7B,IAAI,CAACC,QAAO,GAAI,IAAI;MACpBL,UAAU,CAACsB,QAAQ,CAAC,IAAI,CAACH,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC,CAACX,IAAI,CAACC,QAAO,IAAK;QAC1D,IAAI,CAACR,KAAI,GAAIQ,QAAQ,CAACV,IAAI;MAC5B,CAAC,CAAC,CAACa,KAAK,CAACC,KAAI,IAAK;QAChB,IAAIA,KAAK,CAACJ,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACjCd,MAAM,CAACe,IAAI,CAAC,OAAO,CAAC;QACtB;MACF,CAAC,CAAC;IACJ;EACF;AACF","names":["router","APIService","apiService","data","showError","movie","pageTitle","isUpdate","showMsg","methods","createMovie","addNewMovie","then","response","status","push","catch","error","cancelOperation","updateMovie","mounted","$route","params","pk","getMovie"],"sourceRoot":"","sources":["E:\\Documents\\Education\\UNO\\Courses\\Spring 2023\\ISQA 4900\\Assignments\\Assignment 2\\movie-api\\movie-fe\\src\\components\\MovieCreate.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row align-items-center justify-content-center\">\r\n      <div class=\" col align-items-center\">\r\n        <div class=\"row align-items-center justify-content-center\">\r\n          <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6\">\r\n            <div class=\"alert alert-danger shadow\" role=\"alert\" v-if=\"showMsg === 'error'\">\r\n              Please verify Movie Information\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row align-items-center justify-content-center\">\r\n          <div class=\"col col-12 col-sm-10 col-md-10 col-lg-6 align-items-center\">\r\n            <div class=\"card\">\r\n              <div class=\"card-header\">{{pageTitle}}</div>\r\n              <div class=\"card-body\">\r\n                <form ref=\"form\">\r\n                  <div class=\"container-fluid\">\r\n                    <div class=\"form-group row justify-content-around py-2\">\r\n                      <label class=\"col-5\">Name</label>\r\n                      <div class=\"col col-7\">\r\n                        <input v-model=\"movie.name\" type=\"text\" class=\"form-control-sm form-control\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"form-group row justify-content-around py-2\">\r\n                      <label class=\"col-5\">Description</label>\r\n                      <div class=\"col col-7\">\r\n                        <input v-model=\"movie.description\" type=\"text\" class=\"form-control-sm form-control\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"form-group row justify-content-around py-2\">\r\n                      <label class=\"col-5\">Year</label>\r\n                      <div class=\"col col-7\">\r\n                        <input v-model=\"movie.year\" type=\"text\" class=\"form-control-sm form-control\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"form-group row justify-content-around py-2\">\r\n                      <label class=\"col-5\">Rating</label>\r\n                      <div class=\"col col-7\">\r\n                        <input v-model=\"movie.rating\" type=\"text\" class=\"form-control-sm form-control\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row justify-content-around\">\r\n                      <div v-if=\"!isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"createMovie\">Save</div>\r\n                      <div v-if=\"isUpdate\" type=\"button\" class=\"btn btn-primary col-4\" @click=\"updateMovie\">Update</div>\r\n                      <div type=\"button\" class=\"btn btn-secondary col-4\" @click=\"cancelOperation\">Cancel</div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import router from '../router';\r\n  import {APIService} from '../http/APIService';\r\n  const apiService = new APIService();\r\n  export default {\r\n    data() {\r\n      return {\r\n        showError: false,\r\n        movie: {},\r\n        pageTitle: \"Add New Movie\",\r\n        isUpdate: false,\r\n        showMsg: '',\r\n      };\r\n    },\r\n    methods: {\r\n      createMovie() {\r\n        apiService.addNewMovie(this.movie).then(response => {\r\n          if (response.status === 201) {\r\n            this.movie = response.data;\r\n            this.showMsg = \"\";\r\n            router.push('/movie-list/new');\r\n          }else{\r\n            this.showMsg = \"error\";\r\n          }\r\n        }).catch(error => {\r\n          if (error.response.status === 401) {\r\n            router.push(\"/auth\");\r\n          } else if (error.response.status === 400) {\r\n            this.showMsg = \"error\";\r\n          }\r\n        });\r\n      },\r\n      cancelOperation(){\r\n        router.push(\"/movie-list\");\r\n      },\r\n      updateMovie() {\r\n        apiService.updateMovie(this.movie).then(response => {\r\n          if (response.status === 200) {\r\n            this.movie = response.data;\r\n            router.push('/movie-list/update');\r\n          } else {\r\n            this.showMsg = \"error\";\r\n          }\r\n        }).catch(error => {\r\n          if (error.response.status === 401) {\r\n            router.push(\"/auth\");\r\n          } else if (error.response.status === 400) {\r\n            this.showMsg = \"error\";\r\n          }\r\n        });\r\n      }\r\n    },\r\n    mounted() {\r\n      if (this.$route.params.pk) {\r\n        this.pageTitle = \"Edit Movie\";\r\n        this.isUpdate = true;\r\n        apiService.getMovie(this.$route.params.pk).then(response => {\r\n          this.movie = response.data;\r\n        }).catch(error => {\r\n          if (error.response.status === 401) {\r\n            router.push(\"/auth\");\r\n          }\r\n        });\r\n      }\r\n    },\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}