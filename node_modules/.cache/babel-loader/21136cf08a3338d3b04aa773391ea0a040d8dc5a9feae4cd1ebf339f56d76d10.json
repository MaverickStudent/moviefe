{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from \"./router\";\nimport { APIService } from \"./http/APIService\";\nconst apiService = new APIService();\nexport default {\n  name: 'App',\n  props: {\n    msg: String\n  },\n  data: () => ({\n    authenticated: false,\n    dialog: false,\n    uName: \"Guest\",\n    menu: []\n  }),\n  mounted() {\n    this.fillMenu();\n    apiService.getMovieList().then(response => {\n      this.authenticated = true;\n    }).catch(error => {\n      if (error.response.status === 401) {\n        localStorage.removeItem(\"isAuthenticates\");\n        localStorage.removeItem(\"log_user\");\n        localStorage.removeItem(\"token\");\n        this.authenticated = false;\n      }\n    });\n    console.log(\"this.authenticated--\" + this.authenticated);\n  },\n  methods: {\n    fillMenu() {\n      if (localStorage.getItem(\"isAuthenticates\") && JSON.parse(localStorage.getItem(\"isAuthenticates\")) === true) {\n        console.log(\"IS AUTH\");\n        this.uName = JSON.parse(localStorage.getItem(\"log_user\"));\n      } else {\n        console.log(\"IS NOT AUTH\");\n      }\n      this.menu = [{\n        title: \"Movies\",\n        url: \"/movie-list\"\n      }];\n    },\n    getUser() {\n      if (localStorage.getItem(\"isAuthenticates\") && JSON.parse(localStorage.getItem(\"isAuthenticates\")) === true) {\n        console.log(\"IS AUTH\");\n        this.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n      } else {\n        console.log(\"IS NOT AUTH\");\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"isAuthenticates\");\n      localStorage.removeItem(\"log_user\");\n      localStorage.removeItem(\"token\");\n      this.authenticated = false;\n\n      //\trouter.push('/'); window.location = \"/\";\n    },\n\n    home() {\n      window.location = \"/\";\n    },\n    register() {\n      router.push(\"/register\");\n    },\n    login() {\n      router.push(\"/auth\");\n    }\n  }\n};","map":{"version":3,"mappings":";AA4BA,OAAOA,MAAK,MAAO,UAAU;AAC7B,SAASC,UAAS,QAAS,mBAAmB;AAE9C,MAAMC,UAAS,GAAI,IAAID,UAAU,EAAE;AAEnC,eAAe;EACbE,IAAI,EAAE,KAAK;EACXC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAI,EAAE,OAAO;IACXC,aAAa,EAAE,KAAK;IACpBC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE;EACR,CAAC,CAAC;EACFC,OAAO,GAAG;IACR,IAAI,CAACC,QAAQ,EAAE;IACfX,UAAS,CACJY,YAAY,EAAC,CACbC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACR,aAAY,GAAI,IAAI;IAC3B,CAAC,EACAS,KAAK,CAAEC,KAAK,IAAK;MAChB,IAAIA,KAAK,CAACF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;QACjCC,YAAY,CAACC,UAAU,CAAC,iBAAiB,CAAC;QAC1CD,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;QACnCD,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;QAChC,IAAI,CAACb,aAAY,GAAI,KAAK;MAC5B;IACF,CAAC,CAAC;IACNc,OAAO,CAACC,GAAG,CAAC,sBAAqB,GAAI,IAAI,CAACf,aAAa,CAAC;EACxD,CAAC;EACHgB,OAAO,EAAE;IACPX,QAAQ,GAAG;MACT,IACIO,YAAY,CAACK,OAAO,CAAC,iBAAiB,KAAKC,IAAI,CAACC,KAAK,CAACP,YAAY,CAACK,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAG,EAAI;QAC5GH,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QACtB,IAAI,CAACb,KAAI,GAAIgB,IAAI,CAACC,KAAK,CAACP,YAAY,CAACK,OAAO,CAAC,UAAU,CAAC,CAAC;MAC3D,OAAO;QAEbH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAE1B;MACA,IAAI,CAACZ,IAAG,GAAI,CAAC;QAAEiB,KAAK,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAc,CAAC,CAAC;IAErD,CAAC;IACDC,OAAO,GAAG;MAEV,IAEAV,YAAY,CAACK,OAAO,CAAC,iBAAiB,KACtCC,IAAI,CAACC,KAAK,CAACP,YAAY,CAACK,OAAO,CAAC,iBAAiB,CAAC,MAAM,IAAG,EAEzD;QACFH,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;QAEtB,IAAI,CAACQ,aAAY,GAAIL,IAAI,CAACC,KAAK,CAACP,YAAY,CAACK,OAAO,CAAC,UAAU,CAAC,CAAC;MAEjE,OAAO;QACPH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAE1B;IACA,CAAC;IACDS,MAAM,GAAG;MAETZ,YAAY,CAACC,UAAU,CAAC,iBAAiB,CAAC;MAE1CD,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;MACnCD,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAEhC,IAAI,CAACb,aAAY,GAAI,KAAK;;MAE1B;IAEA,CAAC;;IACDyB,IAAI,GAAG;MAEPC,MAAM,CAACC,QAAO,GAAI,GAAG;IAErB,CAAC;IACDC,QAAQ,GAAG;MAEXpC,MAAM,CAACqC,IAAI,CAAC,WAAW,CAAC;IACxB,CAAC;IAEDC,KAAK,GAAG;MAERtC,MAAM,CAACqC,IAAI,CAAC,OAAO,CAAC;IACpB;EAEA;AACA","names":["router","APIService","apiService","name","props","msg","String","data","authenticated","dialog","uName","menu","mounted","fillMenu","getMovieList","then","response","catch","error","status","localStorage","removeItem","console","log","methods","getItem","JSON","parse","title","url","getUser","validUserName","logout","home","window","location","register","push","login"],"sourceRoot":"","sources":["E:\\Documents\\Education\\UNO\\Courses\\Spring 2023\\ISQA 4900\\Assignments\\Assignment 2\\movie-api\\movie-fe\\src\\App.vue"],"sourcesContent":["<template>\n    <!-- Nav Bar-->\n    <ul class=\"nav justify-content-center\">\n      <li class=\"nav-item active\">\n        <router-link to=\"/\">Home</router-link>\n        |\n      </li>\n      <li class=\"nav-item\">\n        <router-link :to=\"{name: 'MovieList'}\">Movies</router-link>\n      </li>\n      <li class=\"nav-item\" v-if=\"!authenticated\" @click=\"login\" >\n        |\n        <router-link :to=\"{name: 'Auth'}\">Log in</router-link>\n      </li>\n      <li class=\"nav-item\" v-if=\"!authenticated\" @click=\"register\">\n        |\n        <router-link :to=\"{name: 'Register'}\">Register</router-link>\n      </li>\n      <li class=\"nav-item .justify-content-end\" v-if=\"authenticated\" @click=\"logout\" >\n        |\n        <router-link :to=\"{name: 'Auth'}\">Logout</router-link>\n      </li>\n    </ul>\n  <router-view/>\n</template>\n\n<script>\n\nimport router from \"./router\";\nimport { APIService } from \"./http/APIService\";\n\nconst apiService = new APIService();\n\nexport default {\n  name: 'App',\n  props: {\n    msg: String\n  },\n  data: () => ({\n    authenticated: false,\n    dialog: false,\n    uName: \"Guest\",\n    menu: [],\n  }),\n  mounted() {\n    this.fillMenu();\n    apiService\n        .getMovieList()\n        .then((response) => {\n          this.authenticated = true;\n        })\n        .catch((error) => {\n          if (error.response.status === 401) {\n            localStorage.removeItem(\"isAuthenticates\");\n            localStorage.removeItem(\"log_user\");\n            localStorage.removeItem(\"token\");\n            this.authenticated = false;\n          }\n        });\n    console.log(\"this.authenticated--\" + this.authenticated);\n    },\n  methods: {\n    fillMenu() {\n      if (\n          localStorage.getItem(\"isAuthenticates\") && JSON.parse(localStorage.getItem(\"isAuthenticates\")) === true ) {\n        console.log(\"IS AUTH\");\n        this.uName = JSON.parse(localStorage.getItem(\"log_user\"));\n      } else {\n\nconsole.log(\"IS NOT AUTH\");\n\n}\nthis.menu = [{ title: \"Movies\", url: \"/movie-list\" }];\n\n},\ngetUser() {\n\nif (\n\nlocalStorage.getItem(\"isAuthenticates\") &&\nJSON.parse(localStorage.getItem(\"isAuthenticates\")) === true\n\n) {\nconsole.log(\"IS AUTH\");\n\nthis.validUserName = JSON.parse(localStorage.getItem(\"log_user\"));\n\n} else {\nconsole.log(\"IS NOT AUTH\");\n\n}\n},\nlogout() {\n\nlocalStorage.removeItem(\"isAuthenticates\");\n\nlocalStorage.removeItem(\"log_user\");\nlocalStorage.removeItem(\"token\");\n\nthis.authenticated = false;\n\n//\trouter.push('/'); window.location = \"/\";\n\n},\nhome() {\n\nwindow.location = \"/\";\n\n},\nregister() {\n\nrouter.push(\"/register\");\n},\n\nlogin() {\n\nrouter.push(\"/auth\");\n},\n\n},\n}\n\n</script>\n\n\n\n\n<style lang=\"scss\">\n\n#app {\nfont-family: Avenir, Helvetica, Arial, sans-serif;\n\n-webkit-font-smoothing: antialiased;\n-moz-osx-font-smoothing: grayscale;\n\ntext-align: center;\n\ncolor: #2c3e50;\n}\n\n#nav {\n\npadding: 30px;\nbackground-color: cadetblue;\n\na\t{\n\nfont-weight: bold;\ncolor: #2c3e50;\n\n&.router-link-exact-active {\n\ncolor: #42b983;\n}\n\n}\n}\n.nav {\npadding: 1em;\n\nbackground-color: cadetblue;\n\nli {\nfont-weight: bold;\n\ncolor: #2c3e50;\n}\n\na {\n\ncolor: black;\npadding: .5em;\n\n&.router-link-exact-active {\n\ncolor: #42b983;\n}\n\n}\n\n\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}